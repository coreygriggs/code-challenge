{"version":3,"sources":["services/ApiService.ts","components/ArticleList/ArticleList.lazy.tsx","components/Search/Search.lazy.tsx","App.tsx","reportWebVitals.ts","redux/createStore.ts","index.tsx"],"names":["ApiService","BASE_NYT_URL","API_URL","this","a","fetch","then","response","json","responseData","results","catch","err","error","LazyArticleList","lazy","ArticleList","props","fallback","LazySearch","Search","App","useState","setError","dispatch","useSelector","state","searchTerm","useDispatch","useEffect","get","type","payload","articles","className","AppBar","Toolbar","Typography","variant","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","FILTER_ARTICLES","SET_BASE_ARTICLES","initalState","baseArticles","checkSearchTerm","article","term","lowerCaseTerm","toLowerCase","title","indexOf","byline","section","store","createStore","action","stateCopy","Object","assign","filter","ReactDOM","render","document","getElementById"],"mappings":"qQAAqBA,E,iDAEjBC,aAAe,0B,KACfC,Q,UAAqBC,KAAKF,a,0JAE1B,sBAAAG,EAAA,sEACiBC,MAAMF,KAAKD,SACnBI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,OAAOA,EAAaC,WAEvBC,OAAM,SAAAC,GAEH,MAAO,CAAEC,MAAOD,MAR5B,wF,+GAYA,sBAAAR,EAAA,0F,oGCfEU,EAAkBC,gBAAK,kBAAM,gCAQpBC,EANK,SAACC,GAAD,OAClB,cAAC,WAAD,CAAUC,SAAU,KAApB,SACE,cAACJ,EAAD,eAAqBG,OCJnBE,EAAaJ,gBAAK,kBAAM,6DAQfK,EANA,SAACH,GAAD,OACb,cAAC,WAAD,CAAUC,SAAU,KAApB,SACE,cAACC,EAAD,eAAgBF,O,QCwCLI,MAlCf,WACE,MAA0BC,mBAAS,MAAnC,mBAAOT,EAAP,KAAcU,EAAd,KAEMC,GADaC,aAAY,SAACC,GAAD,OAAsBA,EAAMC,cAC1CC,eAejB,OAbAC,qBAAU,YACW,IAAI7B,GACZ8B,MACNxB,MAAK,SAACC,GAEDA,EAASM,MACTU,EAAShB,EAASM,OAElBW,EAAS,CAAEO,KAAM,oBAAqBC,QAAS,CAAEC,SAAU1B,UAGpE,IAGD,sBAAK2B,UAAU,MAAf,UACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,yCAGA,cAAC,EAAD,SAGPzB,GAAS,gEACRA,GAAS,cAAC,EAAD,QC3BJ0B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCPDO,EAAkB,kBAClBC,EAAoB,oBAC3BC,EAAc,CAChBhB,SAAU,GACViB,aAAc,GACdvB,WAAY,IAGhB,SAASwB,EAAgBC,EAA6DC,GAClF,IAAKA,EACD,OAAO,EAGX,IAAMC,EAAgBD,EAAKE,cAE3B,OAA+D,IAAxDH,EAAQI,MAAMD,cAAcE,QAAQH,KACmB,IAAzDF,EAAQM,OAAOH,cAAcE,QAAQH,KACqB,IAA1DF,EAAQO,QAAQJ,cAAcE,QAAQH,GAwBxC,IAAMM,EAAQC,aArBrB,WACmG,IADjFnC,EACgF,uDADxEuB,EACRa,EAAgF,uCAC1FC,EAAYC,OAAOC,OAAO,GAAIvC,GAElC,OAAQoC,EAAO/B,MACX,KAAKgB,EAID,OAHAgB,EAAU9B,SAAWP,EAAMwB,aAAagB,QAAO,SAAAd,GAAO,MAAkC,KAA9BU,EAAO9B,QAAQL,YAClEwB,EAAgBC,EAASU,EAAO9B,QAAQL,eAExCoC,EAEX,KAAKf,EAID,OAHAe,EAAUb,aAAeY,EAAO9B,QAAQC,SACxC8B,EAAU9B,SAAW6B,EAAO9B,QAAQC,SAE7B8B,EACX,QACI,OAAOrC,MC/BnByC,IAASC,OACL,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACI,cAAC,EAAD,MAENS,SAASC,eAAe,SAM1B/B,M","file":"static/js/main.9313d86b.chunk.js","sourcesContent":["export default class ApiService {\n    // we are using proxy locally, I'd make urls an env var\n    BASE_NYT_URL = 'https://api.nytimes.com';\n    API_URL: string = `${this.BASE_NYT_URL}/svc/topstories/v2/science.json?api-key=Gwxln5M3geWlhR6UE0TY1FUWKSG3wCil`;\n\n    async get() {\n        return await fetch(this.API_URL)\n            .then(response => response.json())\n            .then(responseData => {\n                return responseData.results;\n            })\n            .catch(err => {\n                // api service is responsible for graceful error handling of api requests/responses\n                return { error: err };\n            });\n    }\n\n    async post() {\n        // not implemented\n    }\n}","import React, { lazy, Suspense } from 'react';\n\nconst LazyArticleList = lazy(() => import('./ArticleList'));\n\nconst ArticleList = (props: JSX.IntrinsicAttributes & { children?: React.ReactNode; }) => (\n  <Suspense fallback={null}>\n    <LazyArticleList {...props} />\n  </Suspense>\n);\n\nexport default ArticleList;\n","import React, { lazy, Suspense } from 'react';\n\nconst LazySearch = lazy(() => import('./Search'));\n\nconst Search = (props: JSX.IntrinsicAttributes & { children?: React.ReactNode; }) => (\n  <Suspense fallback={null}>\n    <LazySearch {...props} />\n  </Suspense>\n);\n\nexport default Search;\n","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport ApiService from './services/ApiService';\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\nimport ArticleList from \"./components/ArticleList/ArticleList.lazy\";\nimport Search from \"./components/Search/Search.lazy\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { store } from \"./redux/createStore\";\n\ntype RootState = ReturnType<typeof store.getState>;\n\n\nfunction App() {\n  const [error, setError] = useState(null);\n  const searchTerm = useSelector((state: RootState) => state.searchTerm);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const apiService = new ApiService();\n    apiService.get()\n        .then((response) => {\n            // console.log(response)\n          if (response.error) {\n              setError(response.error);\n          } else {\n              dispatch({ type: 'SET_BASE_ARTICLES', payload: { articles: response } });\n          }\n        });\n  }, []);\n\n  return (\n    <div className=\"App\">\n        <AppBar>\n            <Toolbar>\n                <Typography variant=\"h6\">\n                    New York Times Top Articles\n                </Typography>\n                <Search />\n            </Toolbar>\n        </AppBar>\n        {error && 'The articles could not be retrieved. Please try again later.'}\n        {!error && <ArticleList />}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore } from 'redux';\n\nexport const FILTER_ARTICLES = 'FILTER_ARTICLES';\nexport const SET_BASE_ARTICLES = 'SET_BASE_ARTICLES';\nconst initalState = {\n    articles: [],\n    baseArticles: [],\n    searchTerm: ''\n}\n\nfunction checkSearchTerm(article: { title: string, byline: string, section: string }, term: string | null) {\n    if (!term) {\n        return false;\n    }\n\n    const lowerCaseTerm = term.toLowerCase();\n\n    return article.title.toLowerCase().indexOf(lowerCaseTerm) !== -1\n      || article.byline.toLowerCase().indexOf(lowerCaseTerm) !== -1\n      || article.section.toLowerCase().indexOf(lowerCaseTerm) !== -1;\n}\n\nfunction articles(state = initalState,\n                  action: { type: string, payload: { searchTerm: string | null, articles: [] } }) {\n    let stateCopy = Object.assign({}, state);\n\n    switch (action.type) {\n        case FILTER_ARTICLES:\n            stateCopy.articles = state.baseArticles.filter(article => action.payload.searchTerm === ''\n                || checkSearchTerm(article, action.payload.searchTerm));\n\n            return stateCopy;\n\n        case SET_BASE_ARTICLES:\n            stateCopy.baseArticles = action.payload.articles;\n            stateCopy.articles = action.payload.articles;\n\n            return stateCopy;\n        default:\n            return state;\n    }\n}\n\nexport const store = createStore(articles);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/createStore';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}